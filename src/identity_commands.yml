name: identity
help: Create, use and manage identities

commands:
  - name: create
    help: 'Create a new GPG identity, with SSH/password-store/management and associated tombs' 
    args:
      - name: name 
        required: false 
        help: "Alias/nym/name to use for the identity (use quotes if spaces) (optional if --burner is used)"
      - name: email 
        required: false 
        help: "Email address to use for the GPG identity (optional, can also use --mail)"
      - name: expiry_date
        required: false 
        help: Human readable, or GPG-compliant expiry duration to use for the GPG subkeys (eg. '1 year', '1 week', etc)
    flags:
      - long : --backup
        short: -b
        help: "Device file of the backup drive (must be a whole drive without a partition number, eg. /dev/sdb)"
        validate: device
      - long: --burner
        short: -B
        help: "Generate a random username, and only generate GPG/Pass stores"
      - long: --mail
        short: -m
        help: "Mail provider to use for the GPG key (appended to the name when no full mail is given as arg)"
    examples:
      - identity create 'John Doe' john.doe@mail.com '1 year' --backup /dev/xvdj
      - identity create --burner --mail proton.me
      - identity create 'James Steel' jamessteel@proton.me --burner

  - name: open
    help: Open an identity GPG keyring and builtin tomb stores (SSH/pass/mgmt)
    args:
      - name: identity 
        required: true 
        help: "Identity to open" 
        validate: identity_exists
    examples:
      - "identity open john_doe       # Opens gpg coffin and mgmt/pass/ssh/signal tombs"

  - name: close 
    help: Close all open tombs and GPG keyring of the active identity
    args:
      - name: identity 
        required: false 
        help: "Identity to close (optional if an identity is active)."
        validate: identity_exists

  - name: delete 
    help: Delete an identity GPG keyring, tomb stores and backup
    args:
      - name: name
        required: true
        help: 'Name of identity to delete'
    flags:
      - &backup
        long : --backup
        short: -b
        help: "If a backup device is mounted, also delete all the associated backup data"

  - name: backup 
    help: Backup identity graveyard and GPG coffin (alias for 'risks backup identity').
    args:
      - name: identity 
        required: false 
        help: "Name of identity to backup. (Current identity if not specified)"
        validate: identity_exists 
    examples:
      - identity backup john_doe      # Automatically backs john_doe graveyard and GPG coffin
      - identity backup               # Backup the current identity

  # Hidden commands
  - name: active 
    help: Prints the active identity as a raw string, to be used by prompts.
    private: true
